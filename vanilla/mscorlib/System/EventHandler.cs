using System.Runtime.InteropServices;

namespace System;

/// <summary>Represents the method that will handle an event that has no event data.</summary>
/// <param name="sender">The source of the event. </param>
/// <param name="e">An object that contains no event data. </param>
/// <filterpriority>1</filterpriority>
[Serializable]
[ComVisible(true)]
public delegate void EventHandler(object sender, EventArgs e);
/// <summary>Represents the method that will handle an event when the event provides data. </summary>
/// <param name="sender">The source of the event.</param>
/// <param name="e">An object that contains the event data. </param>
/// <typeparam name="TEventArgs">The type of the event data generated by the event.</typeparam>
/// <filterpriority>1</filterpriority>
[Serializable]
public delegate void EventHandler<TEventArgs>(object sender, TEventArgs e);
